import config from '../../../config';
import ToastPannel from '../../../common/toastTest/toastTest.js';
var util = require('../../../utils/util.js');
var MD5 = require('../../../utils/md5.js');
var app = getApp();
var shop_code = '';
var total_micro_second; //拼团剩余时间
var firstFresh; //是否第一次刷新
Page({

  /**
   * 页面的初始数据
   */
  data: {
    Upyun: config.Upyun,
    orderlist: ["微信好友", "微信群"],
    orderimage: ["small-iconImages/heboImg/weixin.png", "small-iconImages/heboImg/weixin_friend.png"],

    showFootview: 'true', //是否显示邀请好友按键
    fightSuccess_fail_status: '1', //1.开团成功 2.拼团失败(人数未满) 3.拼团失败 4.拼团过期
    shopList: [],
    isTM: "", //是否是特卖商品
    initiator: "", //拼团发起人
    user_portrait: "", //发起人头像
    add_time: "", //开团时间
    roll_code: "", //拼团编号
    short_num: "", //还差几人
    validMin: "", //剩余时间
    shareTitle: "", //分享的标题
    shareImage: "", //分享的图片
    shareSuplb: "", //分享商品的品牌
    shareName: "", //分享的商品名称
    sharePrice: "", //分享商品的原价
    shareSe_price: "", //分享商品的售价
    isFromDetail: "", //是否从商品详情过来
    isJoinGroup: false, //是否参团 

    load_timer: true, //定时器
    start_time: '', //开始时间
    end_time: '', //结束时间
    clock_hr: '00', //时
    clock_min: '00', //分
    clock_ss: '00', //秒

    recommendTitleData: [],
    recommendListData: [],
    recommendPage: 1,
    recommend_type_name: '热卖',
    recommend_type1: '6',
    currentTab: 0, //推荐点击的条目
  },

  /*
   * 生命周期函数--监听页面加载
   */
  onLoad: function(options) {
    new app.ToastPannel();
    if (options) {
      this.setData({
        roll_code: options.code,
        isTM: options.isTM,
        fightStatus: options.status,
        isFromDetail: options.isFromDetail,
        isJoinGroup: options.isJoinGroup,
      })
    }
    firstFresh = true;
    app.globalData.oneYuanData = 0; //默认是一元购
    this.getSystemInfo();
    this.fightShopNum_timeHttp();
    this.getRcommendTitleData();
  },
  onShow: function() {
    app.globalData.oneYuanData = 0; //默认是一元购
    if (!firstFresh) {
      this.fightShopNum_timeHttp();
    }
  },
  onUnload() {
    this.setData({
      load_timer: false,
    })
  },

  //获取拼团人数 时间
  fightShopNum_timeHttp: function() {
    var token = (app.globalData.user != null) ? app.globalData.user.userToken : "";
    var url = config.Host + 'order/getRollInit?token=' + token + config.Version + "&roll_code=" + this.data.roll_code;
    util.http(url, this.shopNum_timedata);
  },
  shopNum_timedata: function(data) {
    if (data.status == 1) {
      this.setData({
        short_num: data.data.rnum,
        validMin: data.data.validMin,
        add_time: data.data.paytime,
      });
      if (firstFresh == true) {
        this.fightShopHttp();
        firstFresh = false;
      }
    }

    // 拼团已经失效则直接进入小程序首页
    if (this.data.isJoinGroup == "true") 
    {
      if (this.data.short_num <= 0 || this.data.validMin <= 0) {
        this.showToast("该团结束啦，自动跳转衣蝠首页，挑一个喜欢的商品开团吧。", 3000);

        setTimeout(function () {
          wx.switchTab({
            url: '../shouye',
          })
        }
          , 3000)
      }
    }
  },
  //拼团商品数据
  fightShopHttp: function() {
    var token = (app.globalData.user != null) ? app.globalData.user.userToken : "";
    var url = config.Host + 'order/queryByRollToCode?token=' + token + config.Version + "&code=" + this.data.roll_code;
    util.http(url, this.shopdata);
  },
  shopdata: function(data) {
    if (data.data) {
      var start_time = data.data[0].add_time;
      var n_status = data.data[0].n_status;
      var suppleLabel = data.data[0].supp_label;
      var shopName = data.data[0].shop_name;
      var shop_roll = data.data[0].shop_roll;
      var shareprice = data.data[0].shop_se_price;

      for (var i = 0; i < data.data.length; i++) {
        var add_time = util.getMyDate(Number(data.data[i].add_time), '.', '');
        shop_code = data.data[i].shop_code;
        var shop_pic = data.data[i].shop_url;
        var user_portrait = data.data[i].user_portrait;
        if (user_portrait.indexOf('http') == -1) {
          user_portrait = this.data.Upyun + data.data[i].user_portrait;
          data.data[i].user_portrait = user_portrait;
        }

        //商品图片
        var newcode = shop_code.substr(1, 3);
        var new_pic = this.data.Upyun + newcode + '/' + shop_code + '/' + shop_pic;


        var link = this.data.Upyun + newcode + '/' + shop_code + '/'
        if (data.data[i].four_pic) {
          var picArray = data.data[i].four_pic.split(',');
          if (picArray.length > 2) {
            new_pic = link + picArray[2] + '!450';
          } 
        }


        data.data[i].new_pic = new_pic;
        data.data[i].add_time = add_time;

        this.setData({
          shareImage: new_pic,
          shareSe_price: shareprice,
          sharePrice: shop_roll,
          shareName: shopName,
          shareSuplb: suppleLabel,
          shareSuplb: suppleLabel ? suppleLabel : "衣蝠"
        });
      }


      this.setData({
        shopList: data.data,
        start_time: start_time,
        n_status: n_status,
        short_num: n_status == 0 ? this.data.short_num : 0,
        validMin: n_status == 0 ? this.data.validMin : 0,
      })

      total_micro_second = this.data.validMin || [];
      this.countdown(); //拼团倒计时
      this.showFightPopvie(); //拼团状态弹窗
      this.top_shopHttp(); //获取商品二级类目
    }
  },

  //商品详情
  shopDetailTap: function() {
    var url = "";
    if (this.data.isTM == 1) {
      if (this.data.isJoinGroup == "true") {
        url = '../detail/detail?' + "shop_code=" + shop_code + "&shop_type=2 " + "&roll_code=" + this.data.roll_code;
      } else {
        url = '../detail/detail?' + "shop_code=" + shop_code + "&shop_type=2 ";
      }

    } else {
      if (this.data.isJoinGroup == "true") {
        url = '../detail/detail?' + "shop_code=" + shop_code + "&roll_code=" + this.data.roll_code;
      } else {
        url = '../detail/detail?' + "shop_code=" + shop_code;
      }
    }
    wx.navigateTo({
      url: url
    })
  },
  //获取商品二级类目
  top_shopHttp: function() {
    var that = this;
    var token = "";
    if (app.globalData.user != null) {
      token = app.globalData.user.userToken;
    }
    var oldurl = config.Host + 'shop/queryShopType2?' + config.Version + '&token=' + token + '&shop_code=' + shop_code;
    util.http(oldurl, that.type_data);
  },
  type_data: function(data) {

    //获取品牌商
    var basesData = wx.getStorageSync("shop_tag_basedata");
    var supperlabList = basesData.data.supp_label;
    for (var i = 0; i < supperlabList.length; i++) {
      var supperid = supperlabList[i]["id"];
      if (data.supp_label_id == supperid) {
        var supp_label = supperlabList[i]["name"];
        if (supp_label != undefined) {
          this.setData({
            shareSuplb: supp_label
          });
        }

        break;
      }
    }
    if (data.status == 1) {

      var type_data = data.type2;
      var supp_label = this.data.shareSuplb;
      var shareJson = '快来' + this.data.sharePrice + '元拼' + '【' + supp_label + '正品' + data.type2 + '】,' + '专柜价' + this.data.shareSe_price + '元!';
      if (!type_data) {
        shareJson = '快来' + this.data.sharePrice + '元拼' + '【' + this.data.shareName + '】,' + '原价' + this.data.shareSe_price + '元!';
      }
      this.data.shareTitle = shareJson;
    }
  },

  //邀请好友参团
  inviteFriendTap: function() {
    this.setData({
      fightSuccess_fail_isShow: true,
    })
  },
  //分享好友
  sharetap: function() {
    this.setData({
      fightSuccess_fail_isShow: false,
    })
  },
  //关掉弹窗
  closeTap: function(e) {
    var index = e.currentTarget.dataset.id;
    if (index == "2" || index == "4") {
      wx.switchTab({
        url: '../../../pages/shouye/shouye',
      })
    }

    this.setData({
      fightSuccess_fail_isShow: false,
    })
  },
  //拼团未成功去赚钱
  gomoneyTap: function() {
    this.setData({
      fightSuccess_fail_isShow: false,
    })
    wx.navigateTo({
      url: '../../../pages/sign/sign',
    })
  },

  //拼团未成功去提现
  gotixianTap: function() {
    this.setData({
      fightSuccess_fail_isShow: false,
    })
    wx.navigateTo({
      url: '../../../pages/mine/wallet/Withdrawals/Withdrawals',
    })
  },

  //拼团状态提示弹窗
  showFightPopvie: function() {

    var showFootview = "";
    var fightSuccess_fail_isShow = "";
    var fightSuccess_fail_status = "";

    if (this.data.fightStatus == 11) //开团成功
    {

      showFootview = true;
      fightSuccess_fail_isShow = true;
      fightSuccess_fail_status = '1';

      if (this.data.short_num != 0) //人数未满
      {
        total_micro_second = this.data.validMin || [];
        if (total_micro_second <= 0) {
          fightSuccess_fail_status = '3';
        }
      } else { //人数已满
        showFootview = false;
        fightSuccess_fail_status = '2'; //很遗憾人数已满
      }
    } else if (this.data.fightStatus == 13) //开团失败
    {

      showFootview = true;
      fightSuccess_fail_isShow = true;

      if (this.data.short_num != 0) {
        fightSuccess_fail_status = "3";
      }

    } else {

      showFootview = true;
      fightSuccess_fail_isShow = true;
      total_micro_second = this.data.validMin || [];

      if (this.data.short_num != 0) //人数未满
      {
        if (total_micro_second <= 0) {
          fightSuccess_fail_status = '4'; //很遗憾已经过期
        } else {
          fightSuccess_fail_status = '1'; //还没有过期
        }
      } else {
        if (total_micro_second > 0) {
          fightSuccess_fail_status = '2'; //很遗憾人数已满
        }
      }
    }

    this.setData({
      showFootview: showFootview,
      fightSuccess_fail_isShow: fightSuccess_fail_isShow,
      fightSuccess_fail_status: fightSuccess_fail_status,
    })
  },

  //拼团倒计时
  countdown: function() {
    var that = this;
    that.dateformat(total_micro_second);
    if (total_micro_second <= 0 || that.data.n_status == 1 || this.data.load_timer == false) {
      //时间截至
      that.setData({
        clock_hr: "00",
        clock_min: "00",
        clock_ss: "00",
      });
      return;
    }

    setTimeout(function() {
      total_micro_second -= 1000;
      that.countdown();
    }, 1000)
  },

  dateformat: function(micro_second) {

    var that = this;
    // 总秒数
    var second = Math.floor(micro_second / 1000);

    // 天数
    var day = "" + Math.floor(second / 3600 / 24);
    // 小时
    var hr = "" + Math.floor(second / 3600 % 24);
    // 分钟
    var min = "" + Math.floor(second / 60 % 60);
    // 秒
    var sec = "" + Math.floor(second % 60);

    // console.log(day + "天" + hr + "小时" + min + "分钟" + sec + "秒");

    if (hr.length < 2) {
      hr = '0' + hr;
    }

    if (min.length < 2) {
      min = '0' + min;
    }

    if (sec.length < 2) {
      sec = '0' + sec;
    }

    that.setData({
      clock_hr: hr,
      clock_min: min,
      clock_ss: sec,
    });
  },

  /**
   * 参团商品
   */
  onReachBottom: function() {
    this.shopLishHttp();
  },
  getSystemInfo: function() {
    var that = this;
    wx.getSystemInfo({
      success: function(res) {
        var picHeight = res.windowWidth * 9 / 6;
        var listItemHeight = (res.windowWidth * 9 / 6) * 0.96 * 0.49;
        var listItemWidth = res.windowWidth * 0.96 * 0.49;
        that.setData({
          screenHeight: res.windowHeight,
          screenWidth: res.windowWidth,
          picHeight: picHeight,
          listItemHeight: listItemHeight,
          listItemWidth: listItemWidth,
        });
      }
    });
  },

  recommendShopItemClick: function(event) { //推荐商品条目点击

    var shopcode = event.currentTarget.dataset.shop_code;
    var path = '../detail/detail?' + "shop_code=" + shopcode + "&roll_code=" + this.data.roll_code;

    wx.navigateTo({
      url: path,
    })
  },
  recommendTitleClick: function(event) { //商品推荐头的点击
    var that = this;
    this.data.currentTab = event.currentTarget.dataset.index;
    var type_name = event.currentTarget.dataset.name;
    var id = event.currentTarget.dataset.id;
    this.data.recommendPage = 1;
    this.data.recommend_type_name = type_name;
    this.data.recommend_type1 = id;
    this.shopLishHttp();
    this.setData({
      currentTab: this.data.currentTab
    });
  },
  getRcommendTitleData: function() {
    var basesData = wx.getStorageSync("shop_tag_basedata");
    var titleDataTemp = [];
    var recommendTitleData = [];
    if (basesData) {
      titleDataTemp = basesData.data.shop_type;
    }
    if (titleDataTemp) {
      for (var i = 0; i < titleDataTemp.length; i++) {
        if (titleDataTemp[i].parent_id == 0 && titleDataTemp[i].is_show == 1) {
          var str = (titleDataTemp[i].ico).split(',')[0];
          var str1 = str.split('/')[2].split('.')[0];
          titleDataTemp[i]['link'] = this.data.Upyun + 'small-iconImages/zzq/' + str1;
          recommendTitleData.push(titleDataTemp[i]);
        }
      }
    }
    var by = function(name) { //数组排序函数
      return function(o, p) {
        var a, b;
        if (typeof o === "object" && typeof p === "object" && o && p) {
          a = parseInt(o[name]);
          b = parseInt(p[name]);
          if (a === b) {
            return 0;
          }
          if (typeof a === typeof b) {
            return a < b ? -1 : 1;
          }
          return typeof a < typeof b ? -1 : 1;
        } else {
          throw ("error");
        }
      }
    }
    recommendTitleData.sort(by("sequence"));
    this.setData({
      recommendTitleData: recommendTitleData,
    })
    if (recommendTitleData.length > 0) {
      this.data.recommend_type_name = recommendTitleData[0].type_name;
      this.data.recommend_type1 = recommendTitleData[0].id;

      this.shopLishHttp();
    }
  },

  //获取商品列表数据
  shopLishHttp: function() {
    var that = this;
    var requestUrl = config.Host;
    var token = "";
    if (app.globalData.user != null) {
      token = app.globalData.user.userToken;
    }

    var newUrl = requestUrl + "shop/queryConUnLogin?" + config.Version + "&pager.curPage=" + that.data.recommendPage + "&pager.pageSize=30" + "&type1=" + that.data.recommend_type1 + "&type_name=" + that.data.recommend_type_name;

    util.http(newUrl, that.shopList_data);
  },

  shopList_data: function(data) {
    if (data.status == 1) {
      if (this.data.recommendPage == 1) {
        this.data.recommendListData = [];
      }
      var page = this.data.recommendPage + 1;
      this.data.recommendPage = page;
      this.newshoplist(data.listShop);
    } else {
      this.showToast(data.message, 2000);
    }
  },

  newshoplist: function(obj) {
    for (var i = 0; i < obj.length; i++) {
      var new_clde = obj[i].shop_code.substr(1, 3);
      var new_pic = new_clde + '/' + obj[i].shop_code + '/' + obj[i].def_pic;
      obj[i].def_pic = new_pic;
      var shop_se_price = 0;
      if (this.data.isNewUserFlag) {
        // shop_se_price = ((obj[i].shop_se_price) * (this.data.shop.shop_rebate) * 1).toFixed(0);
        shop_se_price = ((obj[i].shop_se_price) * 1).toFixed(0);
      } else {
        shop_se_price = (obj[i].shop_se_price).toFixed(1);
      }
      var newshopname = obj[i].shop_name;
      if (newshopname.length > 24) {
        newshopname = '... ' + newshopname.substr(newshopname.length - 24, 24);
      }
      if (this.data.currentTab == 0) {
        var discount;
        if (this.data.isNewUserFlag) {
          // discount = ((obj[i].shop_se_price) * (this.data.shop.shop_rebate) * 1 / obj[i].shop_price * 10).toFixed(0);

          discount = ((obj[i].shop_se_price) * 1 / obj[i].shop_price * 10).toFixed(0);
        } else {
          discount = (obj[i].shop_se_price / obj[i].shop_price * 10).toFixed(1);
          obj[i].shop_price = (obj[i].shop_price * 1).toFixed(1);
        }

        obj[i]["discount"] = discount;
      }
      if (this.data.isNewUserFlag) {
        obj[i].shop_price = (obj[i].shop_price * 1).toFixed(0);
      } else {
        obj[i].shop_price = (obj[i].shop_price * 1).toFixed(1);
      }
      obj[i].shop_name = newshopname;
      obj[i].shop_se_price = shop_se_price;

      //何波修改2018-4-4
      if (app.globalData.oneYuanData == 0) //是1元购
      {
        // var se_price = app.globalData.oneYuanValue;
        var se_price = (obj[i].wxcx_shop_group_price * 1).toFixed(1);
        obj[i].shop_price = obj[i].shop_se_price;
        obj[i].shop_se_price = (se_price * 1).toFixed(1);
      } else {
        obj[i].shop_se_price = shop_se_price;
        obj[i].supp_label = '';
      }
    }
    var all_shoplists = this.data.recommendListData;
    for (var j = 0; j < obj.length; j++) {
      all_shoplists.push(obj[j]);
    }
    this.setData({
      recommendListData: all_shoplists,
    })
  },





  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function() {
    //关闭分享弹窗
    this.setData({
      fightSuccess_fail_isShow: false,
    })

    var user_id = app.globalData.user.user_id;

    return {
      title: this.data.shareTitle,
      path: '/pages/shouye/fightDetail/fightDetail?shop_code=' + shop_code + "&isShareFlag=true" + "&user_id=" + user_id + "&code=" + this.data.roll_code + "&isJoinGroup=true" + "&isTM=" + this.data.isTM,
      imageUrl: this.data.shareImage,
      success: function(res) {

      },
      fail: function(res) {
        // 转发失败
      }
    }
  }
})