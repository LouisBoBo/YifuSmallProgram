// pages/listHome/order/paystyle/paystyle.js

import config from '../../../../config.js';
var util = require('../../../../utils/util.js');
var app = getApp();
var token;
var order_code;//订单编号

Page({

  /**
   * 页面的初始数据
   */
  data: {
    payMoney: '', //订单支付价格
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {
    new app.ToastPannel();
    order_code = options.order_code;
    this.setData({
      payMoney : options.payMoney
    });

    this.one_BuyHttp();
    this.submitOrder();
  },

  //立即支付按钮
  paytap: function () {
    this.submitOrder();
  },

  //1元购抽奖结束调用
  one_BuyHttp: function () {
    var that = this;
    var token = "";
    if (app.globalData.user != null) {
      token = app.globalData.user.userToken;
    }
    var oldurl = config.Host + 'order/updateOrderOneFrom?' + config.Version + '&token=' + token + '&order_code=' + order_code;
    util.http(oldurl, that.oneBuy_data);
  },
  oneBuy_data: function (data) {
    if (data.status == 1) {
     
    }
  },

  // 提交订单
  submitOrder: function () {

    var that = this;
    var dataUrl = wx.getStorageSync("oneYuanOrderUrl");
    util.http(dataUrl, that.confirmorderResult);
    this.setData({ dataurl: dataUrl });
  },


  // 提交订单结果
  confirmorderResult: function (data) {

    var that = this;

    if (data.status == 1) {
      this.setData({ totalAccount: data.price })
      // wxpaycx / wapUinifiedOrder 单个;wxpaycx / wapUinifiedOrderList 多个
      var payUrl = 'wxpaycx/wapUinifiedOrderList?';
      if (data.url == 1 || this.data.buyType == 1)
        payUrl = 'wxpaycx/wapUinifiedOrder?';

      var order_code = data.order_code;
      wx.setStorageSync("oneYuan_order_code", order_code);

      //保存当前1元下单的链接
      wx.setStorageSync("oneYuanOrderUrl", this.data.dataurl);

      //不是新用户就需要支付
      wx.login({
        success: res => {
          // 发送 res.code 到后台换取 openId, sessionKey, unionId, 3rd_session
          if (res.code) {
            var dataUrl = config.PayHost + payUrl + config.Version + "&token=" + app.globalData.user.userToken + '&order_code=' + order_code + '&order_name=我的' + '&code=' + res.code;
            util.http(dataUrl, that.orderPayResult)
          } else {
            console.log('获取用户登录态失败！' + res.errMsg)
            that.showToast('获取用户登录态失败！' + res.errMsg, 2000);
          }
        }
      })

    } else {
      this.showToast(data.message, 2000);
    }
  },

  // 支付
  //   appId: "wxeb7839c8cbeef680"
  // nonceStr: "zr73uq589vbk59tlntcri8a1dgxkk44w"
  // package: "prepay_id=wx2017112416500900940db3290184964231"
  // paySign: "2DADDBA31784C2D2271FA0343A1B10AD"
  // signType: "MD5"
  // timeStamp: 1511858924066
  orderPayResult: function (data) {
    var that = this;
    if (data.status == 1) {
      var xml = data.xml;
      wx.requestPayment({
        'timeStamp': xml.timeStamp + "",
        'nonceStr': xml.nonceStr,
        'package': xml.package,
        'signType': xml.signType,
        'paySign': xml.paySign,
        'success': function (res) {
          wx.navigateBack({
          });
        },
        'fail': function (res) {
          that.showToast('支付失败', 2000);
        }
      })
    } else {
      that.showToast(data.message, 2000);
    }
  },

})